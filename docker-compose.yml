services:
  db:
    container_name: quotient_database
    image: postgres
    restart: always
    env_file:
      - .env
    networks:
      - quotient_network
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 3s

  server:
    container_name: quotient_server
    image: quotient_server
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    ports:
      - 80:80
    depends_on:
      db:
        condition: service_healthy
    networks:
      - quotient_network
    volumes:
      - ./submissions:/app/submissions
      - ./config:/app/config
      - ./engine:/app/engine
      - ./static:/app/static

  redis:
    image: redis:alpine
    container_name: quotient_redis
    restart: always
    env_file:
      - .env
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - quotient_network
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"]
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $$REDIS_PASSWORD ping | grep -q PONG"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 3s

  runner:
    build:
      context: .
      dockerfile: Dockerfile.runner
    deploy:
      mode: replicated
      replicas: 5 # Adjust based on server resources
    restart: always
    privileged: false # disable unless a runner needs priv access (e.g. wireguard)
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - quotient_network
    volumes:
      - ./submissions:/app/submissions
      - ./custom-checks:/app/checks
      - ./config/scoredfiles:/app/config/scoredfiles
    tmpfs:
      - /tmp:size=32m

  divisor:
    build:
      context: divisor/
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    network_mode: host # Use host networking for divisor
    depends_on:
      redis:
        condition: service_healthy
    privileged: true # Needed to manage networks
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Needed to read runner names

networks:
  quotient_network:
    driver: bridge
